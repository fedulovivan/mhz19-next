module.exports = {
    parser: "@typescript-eslint/parser",
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: "module"
    },
    env: {
        node: true,
        browser: true
    },
    extends: [
        "eslint:recommended",
        "airbnb",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
    ],
    rules: {
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "arrow-body-style": "off",
        "arrow-parens": "off",
        "array-bracket-spacing": "warn",
        "camelcase": "warn",
        "class-methods-use-this": "warn",
        "comma-dangle": 0,
        "comma-style": "warn",
        "consistent-return": 0,
        "default-case": 0,
        "dot-notation": "warn",
        "func-names": 0,
        "quote-props": "off",
        "import/default": 0,
        "import/extensions": 0,
        "import/first": "warn",
        "import/order": "warn",
        "import/named": 0,
        "import/namespace": 0,
        "import/newline-after-import": "warn",
        "import/no-duplicates": 0,
        "import/no-extraneous-dependencies": 0,
        "import/no-named-as-default": 2,
        "import/no-unresolved": 0,
        "import/no-useless-path-segments": "off",
        "import/prefer-default-export": "off",
        "implicit-arrow-linebreak": "warn",
        "indent": 0,
        "jsx-a11y/no-static-element-interactions": 0,
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/alt-text": "off",
        "jsx-a11y/control-has-associated-label": "off",
        "function-paren-newline": "warn",
        "key-spacing": "warn",
        "keyword-spacing": "warn",
        "lines-between-class-members": "off",
        "max-len": ["warn", { "code": 120, "ignoreComments": true }],
        "max-classes-per-file": "off",
        "no-alert": 0,
        "no-case-declarations": 0,
        "no-unreachable": "warn",
        "no-console": 1,
        "no-debugger": 1,
        "no-duplicate-imports": [1, { "includeExports": true }],
        "no-empty": "warn",
        "no-multi-spaces": "warn",
        "no-multiple-empty-lines": "warn",
        "no-nested-ternary": "warn",
        'no-param-reassign': ['warn', { props: true, ignorePropertyModificationsFor: ['draft'] }],
        "no-plusplus": "warn",
        "no-restricted-globals": [2, "addEventListener", "blur", "close", "closed", "confirm", "defaultStatus", "event", "external", "defaultstatus", "find", "focus", "frameElement", "frames", "history", "innerHeight", "innerWidth", "length", "location", "locationbar", "menubar", "moveBy", "moveTo", "name", "onblur", "onerror", "onfocus", "onload", "onresize", "onunload", "open", "opener", "opera", "outerHeight", "outerWidth", "pageXOffset", "pageYOffset", "parent", "print", "removeEventListener", "resizeBy", "resizeTo", "screen", "screenLeft", "screenTop", "screenX", "screenY", "scroll", "scrollbars", "scrollBy", "scrollTo", "scrollX", "scrollY", "self", "status", "statusbar", "stop", "toolbar", "top"], // https://github.com/eslint/eslint/issues/3959, https://github.com/doshisid/eslint-restricted-globals/blob/master/index.js
        "no-shadow": 1,
        "no-trailing-spaces": 1,
        "no-underscore-dangle": "warn",
        "no-unused-vars": "off",
        "no-var": 1,
        "no-unused-expressions": "warn",
        "no-warning-comments": 1,
        "no-else-return": "warn",
        "object-curly-spacing": "warn",
        "object-curly-newline": "warn",
        "object-property-newline": "warn",
        "object-shorthand": "warn",
        "semi-style": "warn",
        "one-var": 0,
        "operator-linebreak": ["warn", "before", { "overrides": { "=": "after" } }],
        "padded-blocks": 0,
        "prefer-arrow-callback": 0,
        "prefer-const": "warn",
        "prefer-destructuring": "warn",
        "prefer-object-spread": "warn",
        "quotes": 0,
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-empty-function": "off",
        "no-undef": "off",
        "@typescript-eslint/no-empty-function": ["warn"],
        "react/jsx-curly-brace-presence": "warn",
        "react/forbid-prop-types": 1,
        "react/destructuring-assignment": "off",
        "react/jsx-closing-bracket-location": "warn",
        "react/jsx-closing-tag-location": "warn",
        "react/jsx-filename-extension": 0,
        "react/jsx-indent-props": [1, 4],
        "react/jsx-fragments": "off",
        "react/jsx-indent": 0,
        "react/jsx-no-bind": "error",
        "react/jsx-no-undef": ["error", { "allowGlobals": true }],
        "react/jsx-tag-spacing": "warn",
        "react/jsx-curly-spacing": "warn",
        "react/jsx-wrap-multilines": "off",
        "react/jsx-one-expression-per-line": "off",
        "react/jsx-props-no-multi-spaces": "warn",
        "react/no-multi-comp": 0,
        "react/no-unused-prop-types": 1,
        "react/prop-types": "off",
        "react/jsx-props-no-spreading": "off",
        "react/require-default-props": 0,
        "react/self-closing-comp": "warn",
        "react/sort-comp": "off",
        "react/static-property-placement": "off",
        "react/state-in-constructor": "off",
        "react/no-unused-state": "warn",
        "react/jsx-boolean-value": "warn",
        "react-hooks/exhaustive-deps": "error",
        "semi": "warn",
        "space-before-blocks": 0,
        "space-before-function-paren": 0,
        "space-in-parens": "warn",
        "space-infix-ops": "warn",
        "spaced-comment": 0,
        "yoda": 0,
    },
    plugins: [
        "@typescript-eslint",
        "react"
    ],
    settings: {
        react: {
            version: "detect"
        },
        "import/resolver": {
            // a way to tell eslint-plugin-import how to load aliased paths
            // settings for eslint-import-resolver-alias
            alias: {
                map: [
                    ["src", "./src"]
                ],
                extensions: [".js", ".jsx", ".ts", ".tsx"]
            }
        }
    },
};
