type Query {
    ping: String
    deviceMessagesUnified(historyWindowSize: Int, deviceId: String): [DeviceMessageUnified]
    zigbeeDevices(historyWindowSize: Int): [ZigbeeDeviceV2]
    valveStatusMessages(historyWindowSize: Int, origin: String): [ValveStatusMessage]
    lastTemperatureMessage: DeviceMessageUnified
    sonoffDevices: [SonoffDevice]
    # yeelightDevices(historyWindowSize: Int): [YeelightDevice]
    stats: Stats
    # zigbeeDevice(deviceId: String): ZigbeeDevice
    messages: [Message]
}

enum OnOff {
    on
    off
}

# enum TrueFalse {
#     true
#     false
# }

type Message {
    
    # base
    id: Int!
    device_id: String!
    device_class_id: Int!
    timestamp: String!

    # aqara double key wireless wall switch (2018 model)
    action: String
    battery: Int
    linkquality: Int
    voltage: Int

    # https://github.com/fedulovivan/interstellar/tree/master/valves-manipulator
    valve: String
    time: Int
    coldMeterTicks: Int
    chipid: Int
    origin: String
    hotMeterTicks: Int
    leakage: Boolean

}

type Stats {
    zigbee_devices: Int
    valve_status_messages: Int
    device_messages_unified: Int
    yeelight_devices: Int
    yeelight_device_messages: Int
    sonoff_devices: Int
}

type YeelightDevice {
    id: String
    timestamp: Float
    location: String
    model: String
    support: String
    host: String
    port: Int
    power: OnOff
    bright: String
    color_mode: String
    ct: String
    rgb: String
    hue: String
    sat: String
    messages: [YeelightDeviceMessage]
    customAttributes: DeviceCustomAttributesMap
}

type YeelightDeviceMessage {
    device_id: String
    timestamp: Float
    id: Int
    result: [String]
}

type SonoffDevice {
    timestamp: Float
    device_id: String
    ip: String
    port: Int
    switch: OnOff
    startup: OnOff
    pulse: OnOff
    sledOnline: OnOff
    fwVersion: String
    pulseWidth: Int
    rssi: Int
    customAttributes: DeviceCustomAttributesMap
}

type DeviceMessageUnified {
    device_id: String!
    timestamp: Float!
    battery: Int
    battery_low: Boolean
    linkquality: Int
    tamper: Boolean
    temperature: Float
    voltage: Int
    water_leak: Boolean
    humidity: Float
    pressure: Float
}

type DeviceCustomAttributesMap {
    name: String
    isHidden: String
}

type ZigbeeDevice {
    friendly_name: String
    last_seen: Float
    type: String
    network_address: Int
    description: String
    model: String
    model_id: String
    power_source: String
    vendor: String
    voltage: Int
    battery: Int
    custom_description: String
    messages: [DeviceMessageUnified]
    customAttributes: DeviceCustomAttributesMap
}

type ZigbeeDeviceV2 {
    timestamp: Float
    ieee_address: String
    type: String
    network_address: Int
    supported: Boolean
    friendly_name: String
    definition: ZigbeeDeviceV2Definition
    power_source: String
    date_code: String
    model_id: String
    interviewing: Boolean
    interview_completed: Boolean
    messages: [DeviceMessageUnified]
    customAttributes: DeviceCustomAttributesMap
    # endpoints: Record<string, any>
    # scenes: Array<Record<string, any>>
}

type ZigbeeDeviceV2Definition {
    model: String
    vendor: String
    description: String
    # options: Array<Record<string, any>>;
    # exposes: Array<Record<string, any>>;
}

type ValveStatusMessage {
    timestamp: Float
    time: Int
    leakage: Boolean
    valve: String
    hotMeterTicks: Int
    coldMeterTicks: Int
    origin: String
    chipid: Int
}
